import type { FC } from "react";
import Svg, { Path } from "react-native-svg";

interface FlatIconProps {
  name: keyof typeof icons;
  size?: number;
  color?: string; // для fill-иконок
  stroke?: string; // для stroke-иконок
  strokeWidth?: number; // опционально
  className?: string;
}

type IconRenderProps = {
  color: string;
  stroke?: string;
  strokeWidth?: number;
};

type IconDef = {
  viewBox: string;
  paths: (p: IconRenderProps) => React.ReactNode;
};

const icons: Record<string, IconDef> = {
  notification: {
    viewBox: "0 0 15 17",
    paths: ({ color }) => (
      <>
        <Path
          d="M7.24561 0.123914C6.82998 0.123914 6.49561 0.458289 6.49561 0.873914V1.17704C3.95186 1.53954 1.99561 3.73016 1.99561 6.37391V6.82704C1.99561 8.00516 1.68311 9.16141 1.08936 10.1802L0.40498 11.3489C0.301855 11.5302 0.245605 11.7333 0.245605 11.9427C0.245605 12.5958 0.773731 13.1239 1.42686 13.1239H13.0644C13.7175 13.1239 14.2456 12.5958 14.2456 11.9427C14.2456 11.7333 14.1894 11.527 14.0862 11.3489L13.4019 10.177C12.8081 9.15829 12.4956 8.00204 12.4956 6.82391V6.37079C12.4956 3.72704 10.5394 1.53641 7.99561 1.17391V0.870789C7.99561 0.455164 7.66123 0.120789 7.24561 0.120789V0.123914ZM12.5081 11.6239H1.97998L2.38311 10.9333C3.11123 9.68641 3.49561 8.26766 3.49561 6.82704V6.37391C3.49561 4.30204 5.17373 2.62391 7.24561 2.62391C9.31748 2.62391 10.9956 4.30204 10.9956 6.37391V6.82704C10.9956 8.27079 11.38 9.68641 12.105 10.9333L12.5081 11.6239ZM5.12373 14.6239C5.43311 15.4989 6.26748 16.1239 7.24561 16.1239C8.22373 16.1239 9.05811 15.4989 9.36748 14.6239H5.12373Z"
          fill={color ?? "currentColor"}
        />
      </>
    ),
  },
  person: {
    viewBox: "0 0 17 17",
    paths: ({ color }) => (
      <>
        <Path
          d="M13.1709 12.6114C12.574 11.1521 11.1396 10.1239 9.46777 10.1239H7.46777C5.7959 10.1239 4.36152 11.1521 3.76465 12.6114C2.65215 11.4458 1.96777 9.86455 1.96777 8.12393C1.96777 4.5333 4.87715 1.62393 8.46777 1.62393C12.0584 1.62393 14.9678 4.5333 14.9678 8.12393C14.9678 9.86455 14.2834 11.4427 13.1709 12.6114ZM11.9178 13.6333C10.9178 14.2614 9.73652 14.6239 8.46777 14.6239C7.19902 14.6239 6.01777 14.2614 5.01465 13.6333C5.24277 12.4864 6.25527 11.6239 7.46777 11.6239H9.46777C10.6803 11.6239 11.6928 12.4864 11.9209 13.6333H11.9178ZM8.46777 16.1239C12.8865 16.1239 16.4678 12.5427 16.4678 8.12393C16.4678 3.70518 12.8865 0.123928 8.46777 0.123928C4.04902 0.123928 0.467773 3.70518 0.467773 8.12393C0.467773 12.5427 4.04902 16.1239 8.46777 16.1239ZM8.46777 7.62393C7.77715 7.62393 7.21777 7.06455 7.21777 6.37393C7.21777 5.6833 7.77715 5.12393 8.46777 5.12393C9.1584 5.12393 9.71777 5.6833 9.71777 6.37393C9.71777 7.06455 9.1584 7.62393 8.46777 7.62393ZM5.71777 6.37393C5.71777 7.89268 6.94902 9.12393 8.46777 9.12393C9.98652 9.12393 11.2178 7.89268 11.2178 6.37393C11.2178 4.85518 9.98652 3.62393 8.46777 3.62393C6.94902 3.62393 5.71777 4.85518 5.71777 6.37393Z"
          fill={color ?? "currentColor"}
        />
      </>
    ),
  },
};

export const FlatIcon: FC<FlatIconProps> = ({
  name,
  size = 24,
  color = "currentColor",
  stroke,
  strokeWidth,
  className,
}) => {
  const icon = icons[name];
  if (!icon) {
    console.warn(`FlatIcon "${name}" not found`);
    return null;
  }
  return (
    <Svg
      viewBox={icon.viewBox}
      width={size}
      height={size}
      fill={color} // для fill-иконок
      className={className}
    >
      {icon.paths({ color, stroke, strokeWidth })}
    </Svg>
  );
};
